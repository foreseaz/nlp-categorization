{"selfpaced": true, "topic_name": ["Web Development"], "description": "\n\n                    \n                    \n                    Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. \u201cWhere should I even begin? How long is this going to take me? Am I making any mistakes along the way?\u201d The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. \n\nIn this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building Reddit and, more recently, Hipmunk, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.Why Take This Course?By taking this course, you will embark on a digital adventure to build your very own application live on the web. Valuable lessons often come from experience, and it\u2019s from this experience that Steve brings a fresh perspective to the classroom to show you how to approach building your web application in a way that assuages the potential challenges you may face. \nIn this course, you will learn by doing. Once you dive into the course experience, you will work on awesome projects: \n\n- Have you ever thought about what it takes to build a blog from the ground up? Over the course of six lessons, you will build a blog together with Steve that will be fully functional, online, for anybody to read by the end of the course. \n\n- Have you ever wondered how a  wiki works? As a final project for this course, you will be able to take all of your newly gained knowledge and apply it to build a complete wiki. \n\nThis course concentrates on back-end development, but regardless if you are interested in front-end development, back-end development, or anywhere in between the stack, this course will teach you the fundamental knowledge you need break into the web development world. Are you ready to dive in?\n\n                                            Syllabus\n                        ###Lesson 1: How the Web Works (2.5 hours)\nIn this first lesson, you will learn basic concepts regarding the internet, browsers, HTML, and how all those elements fit together. You\u2019ll start using HTML (HyperText Markup Language) to format content for webpages. Then you\u2019ll get to see the mechanics of how the web works: HyperText Transfer Protocol (HTTP) via GET and POST requests. In the first problem set, you will get a simple website up and running with the Google App Engine platform. \n\n###Lesson 2: Forms and Input (4 hours)\nIn this second lesson you will learn about forms, a very common way to obtain input from users. You will learn how to get and process user input from webpages using Google App Engine to get a live form up and running. By the end of this lesson, you will know how to validate user input and securely obtain data from users.\n\n\n###Lesson 3: Databases (6 hours)\nYou learned about getting all sorts of information from users in the previous lesson, but what do you do with it once it\u2019s in your hands? You store it! In this third lesson, Steve will dive in and teach you what you need to know about databases, the final piece you need to start setting your blog in motion! You will learn about various database technologies, SQL, and the Google App Engine Datastore.\n\n###Lesson 4: User Accounts and Security (6 hours)\nIn this fourth lesson, you will learn the fundamentals of authentication and security, which are very relevant topics in almost any web application built today. We\u2019ll start by examining how websites use cookies to authenticate users and how we can manage cookies from the backend of a web application. You will implement a login system for your blog and learn how to use hashing to securely read and transmit user passwords.\n\n###Lesson 5: APIs (4.5 hours)\nUp until now, your programs have generated HTML that a browser can use to render a web page for the user. In the digital world, however, applications and websites communicate not only with people, but also with other applications and websites. By the end of this lesson, your blog will communicate with humans as well as with other computers. Your web application can generate data in formats such as XML and JSON that other computers can access through an API, or application programming interface. Those computers, in turn, can build websites or services that interact with your data. You\u2019ll first learn how to use APIs, and then build web applications as services so that other computers can glean data from your application. We will look at both XML and JSON by investigating how to read them, how to interpret them, and how to manipulate them. \n\n###Lesson 6: Caching (3.5 hours)\nIn this lesson, we will explore how to prepare your applications to run at a large scale. So far, we've written 'toy' applications for just one or two users. If we want to start writing apps for thousands or, perhaps, even millions of users, then obviously we'll need to think about scaling. When we talk about scaling, this may mean running your application on multiple machines, storing huge amounts of data, or consuming large amounts of bandwidth. In particular, we will learn about caching, including the uses of caching, why you might want to cache, and specific caching implementations such as Memcached. \n\n###Lesson 7: Scaling Up (2.5 hours)\nIn this last lesson of the course, Steve has prepared a relaxing, story-time segment. You will hear web development anecdotes from people who have been through it all. You will enjoy interviews with engineer Neil Williams from Reddit, and engineer Chris Chew from Udacity. They will share their experiences on working with web applications, and you will see how all that you\u2019ve learned in this course comes into the big picture.\n\n###Final Project (8 hours)\nFor the final project, you will build a fully functional wiki - a website that allows any page to be edited. The wiki you will be able to build by the end of the course will feature the following: \n\n- Easily create new pages of the site by using the wiki edit capabilities. You should be able to enter a non-existent URL, redirect to an edit page, and create a new page from there. \n- Have user accounts so that logged-in users only will have edit privileges. \n- Use caching functionality.\n- Have a history section which displays the different wiki versions that have existed.\n                                    ", "end_date": "2012-07-09T00:00:00Z", "title": "Web Development", "price": 0, "instructors": "Steve Huffman", "institution_name": [], "commitment": "6 hours", "subject_name": ["Programming"], "course_url": "https://www.udacity.com/course/web-development--cs253?utm_medium=referral&utm_campaign=api", "duration": "12 weeks", "language_name": ["English"], "provider_name": ["Udacity"], "start_date": "2012-04-16T00:00:00Z"}