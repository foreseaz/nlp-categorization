{"selfpaced": false, "topic_name": ["Theoretical Computer Science"], "description": "\n\n                    \n                    \n                    Approximation algorithms, Part I\n\nHow efficiently can you pack objects into a minimum number of boxes? How well can you cluster nodes so as to cheaply separate a network into components around a few centers? These are examples of NP-hard combinatorial optimization problems. It is most likely impossible to solve such problems efficiently, so our aim is to give an approximate solution that can be computed in polynomial time and that at the same time has provable guarantees on its cost relative to the optimum. \n\nThis course assumes knowledge of a standard undergraduate Algorithms course, and particularly emphasizes algorithms that can be designed using linear programming, a favorite and amazingly successful technique in this area. By taking this course, you will be exposed to a range of problems at the foundations of theoretical computer science, and to powerful design and analysis techniques. Upon completion, you will be able to recognize, when faced with a new combinatorial optimization problem, whether it is close to one of a few known basic problems, and will be able to design linear programming relaxations and use randomized rounding to attempt to solve your own problem. The course content and in particular the homework is of a theoretical nature without any programming assignments.  \n\nThis is the first of a two-part course on Approximation Algorithms.\n\n                                            Syllabus\n                        Vertex cover and Linear ProgrammingWe introduce the course topic by a typical example of a basic problem, called Vertex Cover, for which we will design and analyze a state-of-the-art approximation algorithm using two basic techniques, called Linear Programming Relaxation and Rounding. It is a simple, elementary application of powerful techniques.Knapsack and RoundingThis module shows the power of rounding by using it to design a near-optimal solution to another basic problem: the Knapsack problem.Bin Packing, Linear Programming and RoundingThis module shows the sophistication of rounding by using a clever variant for another basic problem: bin packing. (This is a more advanced module.)Set Cover and Randomized RoundingThis module introduces a simple and powerful variant of rounding, based on probability: randomized rounding. Its power is applied to another basic problem, the Set Cover problem.Multiway Cut and Randomized RoundingThis module deepens the understanding of randomized rounding by developing a sophisticated variant and applying it to another basic problem, the Multiway Cut problem. (This is a more advanced module.)\n                                    ", "end_date": "2016-07-25T00:00:00Z", "title": "Approximation Algorithms Part I", "price": 0, "instructors": "Claire Mathieu", "institution_name": ["\u00c9cole normale sup\u00e9rieure"], "commitment": "", "subject_name": ["Computer Science"], "course_url": "https://www.coursera.org/learn/approximation-algorithms-part-1", "duration": "5 weeks", "language_name": ["English"], "provider_name": ["Coursera"], "start_date": "2016-06-20T00:00:00Z"}