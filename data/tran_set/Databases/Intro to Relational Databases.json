{"selfpaced": true, "topic_name": ["Databases"], "description": "\n\n                    \n                    \n                    This course is a quick, fun introduction to using a relational database from your code, using examples in Python. You'll learn the basics of SQL (the Structured Query Language) and database design, as well as the Python API for connecting Python code to a database. You'll also learn a bit about protecting your database-backed web apps from common security problems.\n\nAfter taking this course, you'll be able to write code using a database as a backend to store application data reliably and safely.Why Take This Course?If you look under the hood of a lot of major web sites \u2014 from Wikipedia to Reddit \u2014 you'll find a relational database somewhere.\n\nDatabase systems such as PostgreSQL and MySQL have been part of the web developer's toolkit for many years, and remain some of the most powerful tools available for storing and manipulating structured data.\n\nIf you're planning to continue on in full-stack development, knowing about databases is essential background. Even though many toolkits hide the details of the database from your application code, being able to interact with the database will serve you well in designing, debugging, and maintaining your applications.\n\n                                            Syllabus\n                        ### Lesson 1: Data and Tables\nIn this lesson, you'll learn about how relational databases let you structure data into tables. You'll learn about the importance of unique keys and relationships between tables.\n\n### Lesson 2: Elephants Elements of SQL\nIn this lesson, you'll begin learning SQL, the Structured Query Language used by most relational databases. You'll learn about the **select** and **insert** statements, the basic operations for getting data out of a database and putting data into a database. You'll learn about the operators and syntax available to get the database to scan and join tables for you.\n\n### Lesson 3: Python DB-API\nIn this lesson, you'll learn how to access a relational database from Python code. You'll use a virtual machine (VM) running on your own computer to run a Python web application, and adapt that application to use a database backend. Then you'll learn about some of the most common security pitfalls of database-backed applications, including the famous Bobby Tables. This lesson also covers the SQL **update** and **delete** statements.\n\n### Lesson 4: Deeper Into SQL\nIn this lesson, you'll learn how to design and create new databases. You'll learn about normalized design, which makes it easier to write effective code using a database. You'll also learn how to use the SQL **join** operators to rapidly connect data from different tables.\n\n### Lesson 5: Final Project\nIn this project, you'll use your Python and SQL knowledge to build a database-backed Python module to run a game tournament. You'll design the database schema and write code to implement an API for the project.\n                                    ", "end_date": "2015-03-01T00:00:00Z", "title": "Intro to Relational Databases", "price": 0, "instructors": "Karl Krueger", "institution_name": [], "commitment": "6 hours", "subject_name": ["Programming"], "course_url": "https://www.udacity.com/course/intro-to-relational-databases--ud197?utm_medium=referral&utm_campaign=api", "duration": "4 weeks", "language_name": [], "provider_name": ["Udacity"], "start_date": "2015-02-01T00:00:00Z"}