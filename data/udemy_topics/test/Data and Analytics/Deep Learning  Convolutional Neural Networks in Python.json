{
    "selfpaced": true, 
    "topic_name": [
        "Business"
    ], 
    "description": "<p>This is the 3rd part in my Data Science and Machine Learning series on Deep Learning in Python. At this point, you already know a lot about neural networks and deep learning, including not just the basics like backpropagation, but how to improve it using modern techniques like momentum and adaptive learning rates. You've already written deep neural networks in <strong class=\"redactor-inline-converted\">Theano</strong> and <strong>TensorFlow</strong>, and you know how to run code using the GPU.</p>\n\n<p>This course is all about how to use deep learning for <strong class=\"redactor-inline-converted\">computer vision</strong> using <strong class=\"redactor-inline-converted\">convolutional neural networks</strong>. These are the state of the art when it comes to <strong class=\"redactor-inline-converted\">image classification</strong> and they beat vanilla deep networks at tasks like MNIST.</p>\n\n\n\n<p>In this course we are going to up the ante and look at the <strong class=\"redactor-inline-converted\">StreetView House Number (SVHN) </strong>dataset - which uses larger color images at various angles - so things are going to get tougher both computationally and in terms of the difficulty of the classification task. But we will show that convolutional neural networks, or CNNs, are capable of handling the challenge!</p>\n\n\n\n<p>Because <strong class=\"redactor-inline-converted\">convolution</strong> is such a central part of this type of neural network, we are going to go in-depth on this topic. It has more applications than you might imagine, such as <strong class=\"redactor-inline-converted\">modeling artificial organs</strong> like the pancreas and the heart. I'm going to show you how to build convolutional filters that can be applied to <strong class=\"redactor-inline-converted\">audio</strong>, like the echo effect, and I'm going to show you how to build filters for <strong class=\"redactor-inline-converted\">image effects, </strong>like the <strong class=\"redactor-inline-converted\">Gaussian blur </strong>and <strong class=\"redactor-inline-converted\">edge detection</strong>.</p>\n\n\n\n<p>We will also do some <strong class=\"redactor-inline-converted\">biology</strong> and talk about how convolutional neural networks have been inspired by the <strong class=\"redactor-inline-converted\">animal visual cortex</strong>.</p>\n\n\n\n<p>After describing the architecture of a convolutional neural network, we will jump straight into code, and I will show you how to extend the deep neural networks we built last time (in part 2) with just a few new functions to turn them into CNNs. We will then test their performance and show how convolutional neural networks written in both Theano and TensorFlow can outperform the accuracy of a plain neural network on the StreetView House Number dataset.</p>\n\n\n\n<p>All the materials for this course are FREE. You can download and install Python, Numpy, Scipy, Theano, and TensorFlow with simple commands shown in previous courses.</p><p><br></p><p>NOTES:</p><p>All the code for this course can be downloaded from my github: /lazyprogrammer/machine_learning_examples</p>\n\n<p>In the directory: cnn_class</p>\n\n<p>Make sure you always \"git pull\" so you have the latest version!</p>\n\n<p>HARD PREREQUISITES / KNOWLEDGE YOU ARE ASSUMED TO HAVE:</p>\n\n<ul><li>calculus</li><li>linear algebra</li><li>probability</li><li>Python coding: if/else, loops, lists, dicts, sets</li><li>Numpy coding: matrix and vector operations, loading a CSV file</li></ul><p><br></p>", 
    "end_date": null, 
    "title": "Deep Learning: Convolutional Neural Networks in Python", 
    "price": "50.00", 
    "instructors": "Justin C", 
    "commitment": "2.5 hours", 
    "cover_url": "https://udemy-images.udemy.com/course/750x422/807904_7108.jpg", 
    "course_url": "https://www.udemy.com/deep-learning-convolutional-neural-networks-theano-tensorflow/", 
    "currency": "USD", 
    "subject_name": [
        "Data & Analytics"
    ], 
    "duration": null, 
    "language_name": [
        "English"
    ], 
    "provider_name": [
        "udemy"
    ], 
    "start_date": "2016-03-30T06:08:54Z"
}