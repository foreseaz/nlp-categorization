{
    "selfpaced": true, 
    "topic_name": [
        "Business"
    ], 
    "description": "<p>This course continues where my first course, Deep Learning in Python, left off. You already know how to build an artificial neural network in Python, and you have a plug-and-play script that you can use for TensorFlow. Neural networks are one of the staples of machine learning, and they are always a top contender in Kaggle contests. If you want to improve your skills with neural networks and deep learning, this is the course for you.</p>\n\n<p>You already learned about backpropagation (and because of that, <strong>this</strong> course contains basically <strong>NO MATH</strong>), but there were a lot of unanswered questions. How can you modify it to improve training speed? In this course you will learn about <strong>batch and stochastic gradient descent</strong>, two commonly used techniques that allow you to train on just a small sample of the data at each iteration, greatly speeding up training time.</p>\n\n<p>You will also learn about <strong>momentum</strong>, which can be helpful for carrying you through local minima and prevent you from having to be too conservative with your learning rate. You will also learn about <strong>adaptive learning rate</strong> techniques like AdaGrad and RMSprop which can also help speed up your training.</p>\n\n<p>In my last course, I just wanted to give you a little sneak peak at <strong>TensorFlow</strong>. In this course we are going to start from the basics so you understand exactly what's going on - what are TensorFlow variables and expressions and how can you use these building blocks to create a neural network? We are also going to look at a library that's been around much longer and is very popular for deep learning - <strong>Theano</strong>. With this library we will also examine the basic building blocks - variables, expressions, and functions - so that you can build neural networks in Theano with confidence.</p>\n\n<p>Because one of the main advantages of TensorFlow and Theano is the ability to use the GPU to speed up training, I will show you how to set up a GPU-instance on AWS and compare the speed of<strong> CPU vs GPU</strong> for training a deep neural network.</p>\n\n<p>With all this extra speed, we are going to look at a real dataset - the famous <strong>MNIST</strong> dataset (images of handwritten digits) and compare against various known benchmarks.</p><p><br></p><p>NOTES:</p><p>All the code for this course can be downloaded from my github: /lazyprogrammer/machine_learning_examples</p>\n\n<p>In the directory: ann_class2</p>\n\n<p>Make sure you always \"git pull\" so you have the latest version!</p>\n\n<p>HARD PREREQUISITES / KNOWLEDGE YOU ARE ASSUMED TO HAVE:</p>\n\n<ul><li>calculus</li><li>linear algebra</li><li>probability</li><li>Python coding: if/else, loops, lists, dicts, sets</li><li>Numpy coding: matrix and vector operations, loading a CSV file</li></ul><p><br></p>", 
    "end_date": null, 
    "title": "Data Science: Practical Deep Learning in Theano + TensorFlow", 
    "price": "50.00", 
    "instructors": "Justin C", 
    "commitment": "2.5 hours", 
    "cover_url": "https://udemy-images.udemy.com/course/750x422/772462_d385.jpg", 
    "course_url": "https://www.udemy.com/data-science-deep-learning-in-theano-tensorflow/", 
    "currency": "USD", 
    "subject_name": [
        "Data & Analytics"
    ], 
    "duration": null, 
    "language_name": [
        "English"
    ], 
    "provider_name": [
        "udemy"
    ], 
    "start_date": "2016-02-24T03:02:21Z"
}