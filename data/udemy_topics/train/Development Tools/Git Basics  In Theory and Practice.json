{
    "selfpaced": true, 
    "topic_name": [
        "Development"
    ], 
    "description": "<p style=\"\">Have you heard of Git? Have you been wondering what all the buzz is about? Have you heard about all the open source software projects moving to Github? Have you been thinking that it&#039;s time to give Git a try yourself? We think it is too, and we think this course will help.</p>  <p style=\"\">This course is a different approach to learning Git than, say, reading online documentation or buying a book on Git because you&#039;ll see not only how Git works, but how you should work with Git. We&#039;ll show you the situations that you probably find yourself in as a developer all the time and how Git can help you work faster, work with more confidence, and save yourself and your teammates time by supporting a good workflow. We&#039;ll show you how Git works in practice, and also how to practice Git.</p>  <h5 style=\"\">Session One: Git and You</h5>  <p style=\"\">In this first session we&#039;ll cover getting started with Git and daily workflow which will become second nature to you. We&#039;ll get it in your fingers. Not only that, but all the operations we&#039;ll use Git for will be completely local to our own systems.</p>  <p style=\"\">One of the things that first piques people&#039;s interest in Git is that it&#039;s distributed. They wonder what that means and how it affects them. In later sessions we&#039;ll understand the answers to questions about the distributed nature of Git, but one side effect of it is that many of Git&#039;s operations are completely local to your own computer. A Git repository can live out a useful and completely local life all on one computer, and we&#039;ll see that side of working with Git.</p>  <p style=\"\">When this session is complete you&#039;ll understand:</p>  <h5 style=\"\">Theory:</h5>  <ul style=\"\">  <li style=\"\">What does Git do?</li>  <li style=\"\">Who came up with Git, and who works on it?</li>  <li style=\"\">How Git keeps a history of your project over time</li>  <li style=\"\">How Git stores your files</li>  <li style=\"\">What are all those really long strings of letters and numbers?</li>  <li style=\"\">How a Git repository is structured</li>  <li style=\"\">What is Git&#039;s index for?</li>  <li style=\"\">The components of Git: trees, refs, and blobs</li>  </ul>  <h5 style=\"\">Practice:</h5>  <ul style=\"\">  <li style=\"\">Working with files in Git</li>  <li style=\"\">The standard workflow when committing changes to the repository</li>  <li style=\"\">Commits in Git</li>  <li style=\"\">Working with git log</li>  <li style=\"\">Querying the Git repository</li>  <li style=\"\">How to get help on Git</li>  </ul>  <h5 style=\"\">Session Two: Git and Your Team</h5>  <p style=\"\">Git has no particular need to work with any repository than the local one on your computer, unlike many other version control systems but that wouldn&#039;t be very fun would it? Git really becomes useful when you and your team members use it to facilitate collaborating on a project. We&#039;ll start to understand what it means that Git is distributed.</p>  <p style=\"\">One of the first things people wonder when they hear that Git is distributed, or that Git doesn&#039;t need a central server, is &quot;Can I still have a central server for my team?&quot;. Of course you can, and many teams still work the same way they have with other versioning systems. We&#039;ll see how to do that as well as share changes with another computer directly. We&#039;ll set up an account on Github and use that to learn how to deal with remote repositories.</p>  <p style=\"\">We&#039;ll also learn about very important concept in version control systems: branching. Git makes branching so easy that it&#039;s time to learn how you should be integrating branching into your workflow.</p>  <p style=\"\">When this session is complete you&#039;ll understand:</p>  <h5 style=\"\">Theory:</h5>  <ul style=\"\">  <li style=\"\">What are remotes?</li>  <li style=\"\">What are some strategies for collaboration with Git?</li>  <li style=\"\">How does Git transfer changes?</li>  <li style=\"\">How does pulling changes work?</li>  <li style=\"\">How does branching work in Git?</li>  <li style=\"\">What does rebase do?</li>  <li style=\"\">What is the Git stash?</li>  <li style=\"\">How does tagging work in Git?</li>  </ul>  <h5 style=\"\">Practice:</h5>  <ul style=\"\">  <li style=\"\">Cloning a repository</li>  <li style=\"\">Pushing, pulling, and fetching changes</li>  <li style=\"\">Creating branches</li>  <li style=\"\">Pushing and pulling from branches</li>  <li style=\"\">Setting up a tracking branch</li>  <li style=\"\">Merging and dealing with conflicts</li>  <li style=\"\">How and when to rebase</li>  <li style=\"\">Seeing who did what with git blame</li>  </ul>  <h5 style=\"\">Session Three: Git in the Real World</h5>  <p style=\"\">Session three is all about the how Git works and how you work with Git out there in the wild.</p>  <p style=\"\">Chances are you first heard about Git and Github almost in the same sentence. In fact sometimes it&#039;s easy to forget that Github is just a logical extension to Git itself.</p>  <p style=\"\">Github is a wildly popular way to host and collaborate on Open Source software projects using Git. Some of the most important software tools you may use every day are now hosted or mirrored on Github, such as Rails, jQuery, or Postgres. Github&#039;s unique philosophy on forking, or branching off developement on a software project, makes it easy for anyone to contribute to their favorite open source tools. We&#039;ll dig deeper into how to work with Github.</p>  <p style=\"\">Next we&#039;ll go over a whole list of interesting tools Git gives you work a lot faster. Interactive adding, adding using patch mode, interactive merging, and some advanced logging and querying techniques for finding exactly what&#039;s been going on in your repository.</p>  <p style=\"\">We&#039;ll also cover a very important topic in software development: &quot;screwing things up&quot;. Not only do we often really mess up the project we&#039;re working on, we can also make mistakes in Git itself. Luckily Git is there to help with both of those kinds of problems. Git provides ways to not only commit changes, which is helpful in itself to any software project, but also to fix, reorder, play back, cherry pick, and recover lost commits.</p>  <p style=\"\">When this session is complete you&#039;ll understand:</p>  <h5 style=\"\">Theory:</h5>  <ul style=\"\">  <li style=\"\">How can I get exactly what I want out of the log?</li>  <li style=\"\">How can I find exactly what I want in the repo?</li>  <li style=\"\">What is the reflog and what does it do?</li>  <li style=\"\">Does the repository require any maintenance?</li>  <li style=\"\">How does forking work on Github?</li>  <li style=\"\">How can I stay up to date with the original repository?</li>  <li style=\"\">How do I submit my commits back to the original repository?</li>  </ul>  <h5 style=\"\">Practice:</h5>  <ul style=\"\">  <li style=\"\"><em style=\"\">git add -i</em></li>  <li style=\"\"><em style=\"\">git rebase -i</em></li>  <li style=\"\"><em style=\"\">git commit --amend</em></li>  <li style=\"\"><em style=\"\">git reset, hard and soft</em></li>  <li style=\"\"><em style=\"\">git revert</em></li>  <li style=\"\"><em style=\"\">git cherry-pick</em></li>  <li style=\"\"><em style=\"\">git gc</em></li>  <li style=\"\"><em style=\"\">git reflog</em></li>  <li style=\"\">Forking a repository on Github</li>  <li style=\"\">Submitting a pull request on Github</li>  </ul>", 
    "end_date": null, 
    "title": "Git Basics: In Theory and Practice", 
    "price": "25.00", 
    "instructors": "Tony Hillerson", 
    "commitment": "7.5 hours", 
    "cover_url": "https://udemy-images.udemy.com/course/750x422/8319_ec03_6.jpg", 
    "course_url": "https://www.udemy.com/git-in-theory-and-in-practice/", 
    "currency": "USD", 
    "subject_name": [
        "Development Tools"
    ], 
    "duration": null, 
    "language_name": [
        "English"
    ], 
    "provider_name": [
        "udemy"
    ], 
    "start_date": "2011-06-28T04:48:38Z"
}