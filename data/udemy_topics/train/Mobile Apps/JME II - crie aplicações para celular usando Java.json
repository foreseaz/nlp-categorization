{
    "selfpaced": true, 
    "topic_name": [
        "Development"
    ], 
    "description": "<p><strong>Curso de JME II</strong></p><p>J2me conectando com banco de dados em servidor web. Crie aplicações para celular que conectam e manipulam dados da web em banco de dados. Também é mostrado como gravar os dados do banco na memória (rms), filtrar com recordFilter e Ordenar com recordComparator. São 74 vídeo aulas em 4 gigabyte em vídeo aulas e arquivos. Pré-requisito: Ter adquirido o primeiro curso de j2me que fiz ou ter conhecimentos básicos de j2me.</p><ul><li>Para ser possível manipular banco de dados, será necessário, acessar um servidor web (na internet ou localhost, intranet) através de seu endereço (URL).</li><li>O banco de dados usado foi o PostgreSQL. Ensinei desde instalar o banco, criar o banco, criar a tabela e configurar o driver.</li><li>A maior parte das classes e midlets foram feitas tudo no braço. mas também foi mostrado com criar usando o VisualMidlet, dando mais produtividade no seu desenvolvimento.</li><li><span></span>É ensinado linha a linha como criar uma classe acessoWeb que fará a conexão com o banco de dados no servidor Web.</li><li>É mostrado como criar uma aplicação web que faz a conexão com o banco de dados para poder ser manipulado pelo celular.</li></ul><p><strong>Cronograma da videoaula:</strong></p><ul><li>aula 1880 – Instalação do JDK 1_6 e do netbeans 6.5</li><li>aula 1881 – Iniciando a criação da aplicação para celular</li><li>aula 1882 – Criando o display, list e Commands</li><li>aula 1883 – Usando Implements CommandListener para ação</li><li>aula 1884 – Criando Form para cadastros</li><li>aula 1885 – Instalando Banco PostgreSQL e criando tabela</li><li>aula 1886 – Criando projeto web para conexão com banco PostgreSQL</li><li>aula 1887 – Criando uma pagina web e testando no servidor</li><li>aula 1888 – Criando ListaPessoas conectando com PostgreSQL</li><li>aula 1889 – Listando pessoas no Servidor Web</li><li>aula 1890 – Configurando separação de campos para leitura</li><li>aula 1891 – Implementando classe acessoWeb</li><li>aula 1892 – Celular conectando com servidor Web</li><li>aula 1893 – Thread e lendo url com HttpConnection</li><li>aula 1894 – Executando Thread e HttpConnection na midlet</li><li>aula 1895 – Lendo os dados do servidor no celular</li><li>aula 1896 – Entendendo leitura byte a byte do servidor</li><li>aula 1897 – Usando StringBuffer para adicionar Bytes</li><li>aula 1898 – Juntando bytes para formar campos de dados</li><li>aula 1899 – Usando classe Vector para receber dados</li><li>aula 1900 – Método RecebeDados para midlet</li><li>aula 1901 – Recebendo dados na midlet</li><li>aula 1902 – Resolvendo bug de leitura no Vector</li><li>aula 1903 – Passando dados com Vector e Orientação a Objetos</li><li>aula 1904 – Iniciando JSP Insere pessoa</li><li>aula 1905 – JSP request getParameter para Gravar</li><li>aula 1906 – Método insere pessoa através de URL</li><li>aula 1907 – Acesso Web gravando dados na midlet</li><li>aula 1908 – Inserindo dados no Banco PostgreSQL</li><li>aula 1909 – Manipulando espaços em branco na URL</li><li>aula 1910 – Midlet e classe web inserindo funcionando</li><li>aula 1911 – Método para resultado da Inserção</li><li>aula 1912 – Perfeito gravando com sucesso</li><li>aula 1913 – System garbage collector e Close inputStream</li><li>aula 1914 – Iniciando classe JSP para deletar registro</li><li>aula 1915 – Método exclusão na midlet e acessoWeb</li><li>aula 1916 – Implementando e testando exclusão</li><li>aula 1917 – Resolvendo problemas de exclusão</li><li>aula 1918 – Finalizando exclusão de registros</li><li>aula 1919 – Manipulando espaços em branco</li><li>aula 1920 – Criando classe JSP para alterar registro</li><li>aula 1921 – Métodos e Parametros para alteração</li><li>aula 1922 – Implementando a alteração dos dados</li><li>aula 1923 – Testando alteração dos dados pela midlet</li><li>aula 1924 – Finalizando e funcionando alteração</li><li>aula 1925 – Iniciando pessoa com VisualMidlet</li><li>aula 1926 – Lista de Pessoas no Visual Midlet</li><li>aula 1927 – Commands e Forms no VisualMidlet</li><li>aula 1928 – AcessoWeb no VisualMidlet</li><li>aula 1929 – Novo Projeto acessoWeb pessoa e VisualMidlet</li><li>aula 1930 – Funcionando acesso pessoa e VisualMidlet</li><li>aula 1931 – Excluindo Alterando e Novo no VisualMidlet</li><li>aula 1932 – Iniciando RMS para armazenar dados na Memória</li><li>aula 1933 – Métodos recebe dados Banco</li><li>aula 1934 – Recebe dados Banco e grava no RMS</li><li>aula 1935 – Ainda dados Banco e grava no RMS</li><li>aula 1936 – Gravando todos do banco no RMS</li><li>aula 1937 – Criando novo VisualMidlet para RMS</li><li>aula 1938 – Form para implementar pesquisa</li><li>aula 1939 – Implementar pesquisas manual substring</li><li>aula 1940 – Localizando bug na pesquisa manual</li><li>aula 1941 – Mais pesquisa manual</li><li>aula 1942 – Finalizando pesquisa manual readUTF e equals</li><li>aula 1943 – Listar todos os itens na Lista</li><li>aula 1944 – Inserindo SplashScreen</li><li>aula 1945 – Filtrando com RecordFilter</li><li>aula 1946 – Interface RecordFilter matches</li><li>aula 1947 – Implementando RecordFilter no enumerateRecords</li><li>aula 1948 – Parâmetro para pesquisa com RecordFilter</li><li>aula 1949 – Finalizando pesquisa com RecordFilter</li><li>aula 1950 – Ordenando com interface RecordComparator</li><li>aula 1951 – Implementando ordenação com RecordComparator</li><li>aula 1952 – RecordComparator com ByteArrayInputStream</li><li>aula 1953 – Finalizando ordenação com RecordComparator<span></span></li></ul>", 
    "end_date": null, 
    "title": "JME II - crie aplicações para celular usando Java", 
    "price": "30.00", 
    "instructors": "Neri Neitzke", 
    "commitment": "10.5 hours", 
    "cover_url": "https://udemy-images.udemy.com/course/750x422/632446_74bd.jpg", 
    "course_url": "https://www.udemy.com/jme-ii-crie-aplicacoes-para-celular-usando-java/", 
    "currency": "USD", 
    "subject_name": [
        "Mobile Apps"
    ], 
    "duration": null, 
    "language_name": [
        "Others"
    ], 
    "provider_name": [
        "udemy"
    ], 
    "start_date": "2015-10-06T14:42:46Z"
}