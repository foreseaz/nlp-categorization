{
    "selfpaced": true, 
    "topic_name": [
        "Development"
    ], 
    "description": "<p>This course’s purpose is to introduce <strong>any</strong> JavaScript developer on <strong>any</strong> platform to the powerful world of Node.js, task automation, package management and module loading. Basically: Modern JavaScript.</p><p>This is course that I wish I had before years of trial and error, source-code spelunking and documentation reading; so with it I hope to save you guys all the trouble and get going writing modern, maintainable, and organized JavaScript today!</p><p><strong>Node.js? I thought you said ANY platform!</strong></p><p>While this course is a great introduction to writing server-side applications in node (certainly not wasted time, even if you don’t intend to use a node server), we spend most of our time using node as a development tool.<br></p><p>If you’re writing an application in PHP, ASP. NET, or anything else, no problem! Node won’t need to be installed on the production server for it to do it’s thing. We simply use it to process our assets; there’s no need for it to be deployed into production unless your backend server also uses node.</p><p><strong>Especially</strong> if you’re an ASP. NET developer, Microsoft is incorporating these tools <strong>right into</strong> Visual Studio and ASP. NET 5! Node.js isn’t just for Linux and servers anymore! But on the other hand, that means you have to have a good grasp on these tools to stay ahead in the world of ASP. NET - and that’s why I’m here!</p><p><strong>Modern JavaScript</strong></p><p>To write modern JavaScript, we need three things: a JavaScript <em>transpiler</em>, a module loader, and a module bundler.</p><p>A <strong>transpiler</strong> is what takes modern JavaScript and turns it into legacy JavaScript that will run in any browser! Using a transpiler these days is practically the norm. There is <strong>no</strong> reason why we should be stuck writing 5 year old JavaScript because some of your customers are stuck with ancient browsers. We will be using <strong>Babel</strong> extensively for this purpose.</p><p>In addition to the new features of JavaScript, <strong>modules</strong> are one of the most important aspects to writing highly maintainable, <em>modular</em> (see what I did there?) code for applications from the small to the enterprise. I’m going to show you guys some tools that makes writing properly organized modular code in JavaScript <strong>so</strong> simple that there’s <strong>no</strong> reason not to use them, even for small projects!</p><p><strong>What else will be covered?</strong></p><p>Since a lot of these tasks are going to require a bit of automation, we’re going to be introducing you to <strong>Gulp</strong> (version 4). Gulp is an awesome task runner that allows us to write code that can perform automated tasks, such as transpiling or bundling our JavaScript. Note: Gulp is supported as a first class citizen in Visual Studio 2015! It’s even used in the project templates for ASP. NET 5!</p><p>We’re also going to take a look at <strong>Bower</strong>. Bower is a client-side package manager that makes it easy for us to install third party dependencies.</p><p>Finally, we’ll also take a look at <strong>LESS</strong> - the CSS preprocessor. I know that’s not much to do with JavaScript, but it will give us a reason to look into automating the building and bundling process of our styles. Besides, once you use LESS, you’ll never want to use vanilla CSS again!</p>", 
    "end_date": null, 
    "title": "Using Modern JavaScript Today", 
    "price": "20.00", 
    "instructors": "3D BUZZ Programming and Digital Art training", 
    "commitment": "16.5 hours", 
    "cover_url": "https://udemy-images.udemy.com/course/750x422/711592_d69b_3.jpg", 
    "course_url": "https://www.udemy.com/using-modern-javascript/", 
    "currency": "USD", 
    "subject_name": [
        "Web Development"
    ], 
    "duration": null, 
    "language_name": [
        "English"
    ], 
    "provider_name": [
        "udemy"
    ], 
    "start_date": "2015-12-31T05:23:41Z"
}