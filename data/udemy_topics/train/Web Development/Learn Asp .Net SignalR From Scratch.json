{
    "selfpaced": true, 
    "topic_name": [
        "Development"
    ], 
    "description": "<p><strong style=\"\">Problem</strong></p><p>I hope you might have got fed up of refreshing the whole page to get the updated data. i.e., sending a request to the server always to check updates by working on client - server request pattern by making ajax call. <strong style=\"\">Right! </strong>Don&#039;t worry here you have the solution.</p><p><strong style=\"\">Solution</strong></p><p>Here you will learn something interesting i.e., clients need not to do anything to get the update from the server just they need to be in connection with the server and server will push the updates to all the clients which are in connection. This is also called as <strong style=\"\">push technology</strong> or <strong style=\"\">reverse ajax. </strong><strong style=\"\"></strong>Best example of this is<strong style=\"\"> chat application. </strong></p><p><strong style=\"\">Have you ever wondered how Google chat, Skype chat, Yahoo chat, Facebook chat, whatsApp chat, etc., work?</strong></p><p>Yes, At the end of this course you will learn a new Asp .Net SignalR technology by creating a simple chat application and then slowly you will dive into the subject and understand the internals of Asp. Net SignalR by creating group chat, working on various events and broadcasting some messages to all web clients. Finally you will end up with an interesting web based real time game to demonstrate that SignalR is not all about chat application. </p><p><strong style=\"\">Add a new skill set to your profile today i.e., Asp. Net SignalR </strong></p><ul style=\"\"><li>Getting Started With SignalR</li><li>Basics Of SignalR</li><li>Creating Chat Application</li><li>Exploring The Class Hub And Group Chat</li><li>Broadcasting and Gaming</li></ul><p>Here is a brief description of SignalR.</p><p><strong style=\"\">What is SignalR?</strong></p><p>ASP .NET SignalR is a library for ASP .NET developers that simplifies the process of adding real-time web functionality to applications. Real-time web functionality is the ability to have server code push content to connected clients instantly as it becomes available, rather than having the server wait for a client to request new data.</p><p>SignalR can be used to add any sort of &quot;real-time&quot; web functionality to your ASP .NET application. While chat is often used as an example, you can do a whole lot more. Any time a user refreshes a web page to see new data, or the page implements long polling to retrieve new data, it is a candidate for using SignalR. Examples include dashboards and monitoring applications, collaborative applications (such as simultaneous editing of documents), job progress updates, and real-time forms.</p><p>SignalR also enables completely new types of web applications that require high frequency updates from the server, for example, real-time gaming.<span></span></p><p>SignalR provides a simple API for creating server-to-client remote procedure calls (RPC) that call JavaScript functions in client browsers (and other client platforms) from server-side .NET code. SignalR also includes API for connection management (for instance, connect and disconnect events), and grouping connections.</p>", 
    "end_date": null, 
    "title": "Learn Asp .Net SignalR From Scratch", 
    "price": "20.00", 
    "instructors": "Microsoft Certified Trainer Mohammed Manzoor Ahmed", 
    "commitment": "2 hours", 
    "cover_url": "https://udemy-images.udemy.com/course/750x422/531952_f83a_2.jpg", 
    "course_url": "https://www.udemy.com/learn-asp-net-signalr-from-scratch/", 
    "currency": "USD", 
    "subject_name": [
        "Web Development"
    ], 
    "duration": null, 
    "language_name": [
        "English"
    ], 
    "provider_name": [
        "udemy"
    ], 
    "start_date": "2015-06-19T06:44:16Z"
}