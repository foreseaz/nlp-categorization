{
    "selfpaced": true, 
    "topic_name": [
        "Development"
    ], 
    "description": "<p>This class is designed to help you crush your programming interviews.</p><p>In my career, every time I've had to do a coding interview, I wish I had a more comprehensive and set plan I could follow without feeling I was missing something. I also wish I had someone to walk me through the difficult parts - everything I needed to know from a technical perspective. I'm not going to waste your time with what to wear, and how to interview (although, I do offer some tips from my experience that I think will be helpful.) This is a meaty class that cuts straight to the chase, and helps you maximize the time you have. So come join me on this journey, and lets get started!</p><p>Who This Class is For</p><p>The ideal student for this course is someone who wants a comprehensive and easy to follow guide in preparing for coding interviews. They can be someone who's completely new to coding interviews (ie new grad, or someone going through a career change), or someone who hasn't done them in a while and wants to brush up for an upcoming interview.<br></p><p>What You Will Achieve at the End of this Class </p><p>What I hope to achieve with you at the end of the class is a better awareness and preparedness of what questions tech companies ask, and how to prepare for those questions. Even if the question isn't exactly the same, you'll recognize the pattern, and be able to start solving and speaking intelligently to the problem. </p><p>Steps for the Rest of the Class </p><p>Every coding interview I've done (with a few exceptions) has included whiteboarding. If you're coding remotely, it'll most likely be a word document with no compiler. There are some companies that will provide a platform that runs test cases through your program. This class is intended for the majority of companies that still whiteboard. </p><p>Therefore, it's smart to use pen(pencil) and paper to follow along with the lectures as I type and make your own notes. Try to solve the problem on your own before you look at the solution, and then compare your solution to mine. How do they differ and why? Each problem set will include a problem statement, a strategy for solving, a solution, and Big O complexity analysis (how efficient is our solution?) Go over the sections that you don't understand, because it will make you feel more confident.</p><p>Are you ready to get started?! I am! So come join me in the next section :)</p>", 
    "end_date": null, 
    "title": "Coding Interview Bootcamp ", 
    "price": "20.00", 
    "instructors": "Alexandra Mirtcheva", 
    "commitment": "2 hours", 
    "cover_url": "https://udemy-images.udemy.com/course/750x422/666200_2145.jpg", 
    "course_url": "https://www.udemy.com/coding-interview-bootcamp/", 
    "currency": "USD", 
    "subject_name": [
        "Software Engineering"
    ], 
    "duration": null, 
    "language_name": [
        "English"
    ], 
    "provider_name": [
        "udemy"
    ], 
    "start_date": "2015-11-10T21:39:33Z"
}