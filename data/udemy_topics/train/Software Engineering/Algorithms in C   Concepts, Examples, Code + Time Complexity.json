{
    "selfpaced": true, 
    "topic_name": [
        "Development"
    ], 
    "description": "<p> <strong></strong>Algorithms in C : Concepts, Examples, Code + Time Complexity<strong></strong> <strong>(Recently updated : February 16, 2016!)</strong></p><p><strong></strong>What's New: <strong>New section on Transform and Conquer algorithms,</strong><strong>Time Complexity Quiz, </strong><strong>Master Theorem, </strong><strong>Number Theoretic Algorithms</strong><br><strong></strong></p><p><em><strong></strong></em><strong>Algorithms are very important for programmers to develop efficient software designing and programming skills. This Course introduces you to most important algorithms in computer science. Each video explains the concept/logic behind the algorithm, provides an example and explains pseudo-code. Each video also has working C programs of algorithm implementations with sample input &amp; output. This course will help you crack those programming interviews on algorithms.</strong> <br><strong></strong></p><p><strong>Why Take this Course?</strong></p><p>Most of the companies in today's world depend on software for their daily operations. How do these software take right decisions and keep these companies running in the right direction? Well, it's all in their programming. Programmers over the decades have been writing code which perform right operations in right conditions. This is done using Algorithms.</p><p>Taking this algorithms course will help you to understand how to implement logic in the form of a code in an optimal way and also enables you to write the programs efficiently. In this course you will learn how the most important and most common algorithms used in programming are designed and implemented. This course will kick start your journey in the world of programming with algorithms.<br></p><p><strong>How is this course designed?</strong></p><p>This Course is structured into following sections:</p><p><strong>Overview:</strong> This section introduces you to the course, provides information about the author, course structure and gives you answers to some of the frequently asked questions by students.</p><p><strong>Brute Force: </strong>This section explains the brute force approach to problem solving. You will understand the how the algorithms selection sort, bubble sort, sequential search and string matching work.</p><p><strong>Divide and Conquer:</strong> This section deals with algorithms based on Divide and Conquer technique. Two sorting algorithms - quick sort and merge sort are explained.</p><p><strong>Decrease and Conquer: </strong>In this section decrease and conquer approach and its variants are explained. Binary search and insertion sort algorithms are explained with an example.</p><p><strong>Transform and Conquer: </strong> Significance of transform-and-conquer technique and algorithms like heap-sort will be explained here. Lectures on Heaps, heap construction and heapsort algorithm are added. Each algorithm is explained with an example in a lucid way.</p><p><strong>Dynamic Programming:</strong> This section explains how to solve problems with overlapping sub-problems. Warshall's algorithm and Floyd's algorithm are explained.</p><p><strong>Greedy Technique:</strong> This section explains algorithms based on Greedy technique. Section begins with explanation on minimum spanning tree concept. Two algorithms (Prim's and Kruskal's) to construct a minimum spanning tree of a given graph are explained step-by-step.</p><p><strong>Number Theory :</strong> This section deals with the algorithms involving numerical computations. Euclid's Algorithm, RSA algorithm are explained with example.</p><p><strong>Time Complexity : </strong>This section explains the importance of time complexity analysis, the asymptotic notations to denote the time complexity of algorithms.</p><p>Also, each algorithm's time complexity is explained in separate video lectures.</p><p>Students can benefit by learning about designing and implementing algorithms in C. Job Seekers can also benefit by using the information in preparing for their programming interviews.<br></p><p>Once you are enrolled,   you get a life time access  to all the resources and lectures in this course. This course is always evolving with new lectures, resources and quizzes to keep you  up-to-date. So take this course now and learn how to design and implement algorithms.</p>", 
    "end_date": null, 
    "title": "Algorithms in C : Concepts, Examples, Code + Time Complexity", 
    "price": "30.00", 
    "instructors": "Engineering Mentor, Pratibha Badiger", 
    "commitment": "3.5 hours", 
    "cover_url": "https://udemy-images.udemy.com/course/750x422/599316_1b4f_4.jpg", 
    "course_url": "https://www.udemy.com/algorithms-c-concepts-examples-code/", 
    "currency": "USD", 
    "subject_name": [
        "Software Engineering"
    ], 
    "duration": null, 
    "language_name": [
        "English"
    ], 
    "provider_name": [
        "udemy"
    ], 
    "start_date": "2015-09-01T12:46:16Z"
}