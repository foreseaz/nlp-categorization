{
    "selfpaced": true, 
    "topic_name": [
        "IT & Software"
    ], 
    "description": "<h4>Introduction</h4>\n\n<p>Hello and welcome, this course introduces a practical approach to testing software. It bridges the gap between theoretical knowledge and real world implementation. This article helps you gain an insight to Software Testing - understand technical aspects and the processes followed in a real working environment.</p>\n\n\n\n\n\n<h4>Who will benefit?</h4>\n\n<p><strong>Beginners. </strong>For those of you who wish to mould your theoretical software engineering knowledge into practical approach to working in the real world.</p>\n\n\n\n<p>Those who wish to take up Software Testing as a profession.</p>\n\n\n\n<p><strong>Developers! </strong>This is an era where you need to be an “All rounder”. It is advantageous for developers to posses testing capabilities to test the application before hand. This will help reduce overhead on the testing team.</p>\n\n\n\n<p><strong>Already a Tester! </strong>You can refresh all your testing basics and techniques and gear up for Certifications in Software Testing</p>\n\n\n\n<p><strong>An earnest suggestion: </strong>No matter which profession you choose, it is advisable that you posses the following skills:</p>\n\n\n\n<p>-       Good communication skills – oratory and writing</p>\n\n<p>-       Fluency in English</p>\n\n<p>-       Good Typing skills</p>\n\n\n\n<p>By the time you finish reading this article, you will be aware of all the techniques and processes that improves your efficiency, skills and confidence to jump start into the field of Software Testing.</p><p><strong>Fun Facts:</strong></p><p>Following are some facts that can help you gain a better insight into the realities of Software Engineering.</p>\n\n<ol><li>The best programmers are up to 28 times better than the worst programmers.</li><li>New tools/techniques cause an initial LOSS of productivity/quality.</li><li>The answer to a feasibility study is almost always “yes”.</li><li>A May 2002 report prepared for the National Institute of Standards and Technologies (NIST)(1) estimates the annual cost of software defects in the United States as $59.5 billion.</li><li>Reusable components are three times as hard to build</li><li>For every 25% increase in problem complexity, there is a 100% increase in solution </li><li>complexity.</li><li>80% of software work is intellectual. A fair amount of it is creative. Little of it is clerical.</li><li>Requirements errors are the most expensive to fix during production.</li><li>Missing requirements are the hardest requirement errors to correct.</li><li> Error-removal is the most time-consuming phase of the life cycle.</li><li>Software is usually tested at best at the 55-60% (branch) coverage level. </li><li>100% coverage is still far from enough.</li><li>Rigorous inspections can remove up to 90% of errors before the first test case is run.</li><li>Maintenance typically consumes 40-80% of software costs. It is probably the most important life cycle phase of software.</li><li>Enhancements represent roughly 60% of maintenance costs.</li><li>There is no single best approach to software error removal.</li></ol>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", 
    "end_date": null, 
    "title": "An Intro to Software Testing: Ultimate Guide for Testers", 
    "price": "20.00", 
    "instructors": "Fareed Raja", 
    "commitment": "1.5 hours", 
    "cover_url": "https://udemy-images.udemy.com/course/750x422/812694_7898_2.jpg", 
    "course_url": "https://www.udemy.com/software-testing-guide/", 
    "currency": "USD", 
    "subject_name": [
        "Other"
    ], 
    "duration": null, 
    "language_name": [
        "English"
    ], 
    "provider_name": [
        "udemy"
    ], 
    "start_date": "2016-04-04T18:49:06Z"
}