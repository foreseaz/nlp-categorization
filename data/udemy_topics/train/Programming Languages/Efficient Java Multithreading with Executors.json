{
    "selfpaced": true, 
    "topic_name": [
        "Development"
    ], 
    "description": "<p>AÂ 7.5-hours course on multi-threading - it cannot get more detailed than that! Learn all the concepts of Java's Executors API from scratch in combination with parallel concepts of the Threads API. Develop skills and deepen your knowledge of advanced multi-threading concepts by learning various tips &amp; techniques and becoming aware of pitfalls when using Executors API. And ... refresh your advanced Threads-API concepts as well.</p>\n\n<ul><li><em>Do you know how to return values using the normal Threads API and its Runnables?</em></li><li><em>Do you know the various ways of terminating threads midway for both the APIs?</em></li><li><em>Do you know how to 'join threads' using Executors?</em></li><li><em>Do you know that you cannot catch stray exceptions leaked out from a thread by using try-catch block - neither in the Threads API nor in the Executors one? And that this can lead to third-party code killing your scalable, high-performance and high-availability enterprise application?</em></li><li><em>Do you know how to check if a task has finished execution using both the APIs?</em></li><li><em>Do you know what are daemon threads and how to create them using Executors?</em></li><li><em>Do you know how to name Executor threads?</em></li><li><em>Do you know the various ways to schedule tasks for running in future using both the APIs? Do you know the various 'types' of scheduling?</em></li></ul>\n\n<p>If the answer to any of these questions is 'no', then this course is for you (provided that you know Java and the basics of multi-threading already)! Learning from Full-HD (1080p) videos and nearly 8 hours of content will help you convert all these \"nos\" to \"yeses\" ... and will also give you an edge over your peers! Not only will this course help you learn how to get things done the multi-threaded way but also how to avoid the mistakes and pitfalls and thereby, increase your efficiency and productivity. All those long bug-fixing hours that you save can be spent finishing your other pending work or even for pleasure!</p>\n\n<p><strong>Avoid the pitfalls while writing multi-threaded code by learning pro-tips</strong></p>\n\n<p>In my 13 years of experience building large enterprise applications, I have made all the mistakes in multi-threading that can be made. And believe me - multi-threading bugs are costly and multi-weekend-destroying to resolve.</p>\n\n<p> I have used my vast experience to craft this course in such a manner so as to highlight the pitfalls that await a programmer and also provide tips to avoid those pitfalls. By going through this course, you will be years ahead of your peers who are yet to make all the mistakes that I have made.</p>\n\n<p><strong>Content and Overview</strong></p>\n\n<p>It is difficult to directly move from an older to a newer way of doing things if you are not comfortable with the older way also - you won't be able to map things from the old way to the new way. So, this course has been structured in such a way that the Threads-API way of doing things are explained first and then the corresponding way to do them using the Executors-API is explained. This will help you understand not only the advanced concepts of Executors but also those of the Threads-API.</p>\n\n<p>So, this course is suitable for programmers who want to learn about the Executors API from scratch. It is also beneficial for those who want to refresh their concepts or learn the techniques of doing various operations using the Threads-API. Detailed examples along with the source-code are provided on every concept for both the APIs.</p>\n\n<p>The course starts with the basics first - 'How to create and run threads', 'How to name the threads' and 'How to return values from threads' - using both the APIs. And then, it gradually moves on to increasingly advanced concepts like 'Terminating Threads', 'Catching Exceptions', 'Waiting for threads to finish without wasting CPU cycles', etc.</p>\n\n<p>BEFORE YOU BUY THIS COURSE, DON'T FORGET TO WATCH THE FREE PREVIEW VIDEO ON 'PRE-REQUISITES AND COURSE STRUCTURE' IN SECTION-1!</p>", 
    "end_date": null, 
    "title": "Efficient Java Multithreading with Executors", 
    "price": "30.00", 
    "instructors": "Arun Kumar", 
    "commitment": "7.5 hours", 
    "cover_url": "https://udemy-images.udemy.com/course/750x422/498706_bbdc_3.jpg", 
    "course_url": "https://www.udemy.com/efficient-java-multithreading-with-executors/", 
    "currency": "USD", 
    "subject_name": [
        "Programming Languages"
    ], 
    "duration": null, 
    "language_name": [
        "English"
    ], 
    "provider_name": [
        "udemy"
    ], 
    "start_date": "2015-05-11T06:27:29Z"
}