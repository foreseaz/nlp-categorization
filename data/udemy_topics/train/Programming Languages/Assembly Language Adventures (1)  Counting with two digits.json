{
    "selfpaced": true, 
    "topic_name": [
        "Development"
    ], 
    "description": "<h4><strong>Learn Assembly Language<br>   </strong></h4>  <p>  \t                   The x86 Adventures series teaches you your computer&#039;s language - x86 Assembly Language, from scratch. <strong>No prior knowledge is assumed.  </strong>  </p>  <p>  \t <strong>[Part 1] Counting with two digits</strong>  </p>  <p>  \t                 This is the first chapter of x86 Assembly Adventures. Here we begin with the really basics - How to live in the binary system - A system where instead of 10 digits, we have only two: 0 and 1. If you have ever seen all those zeroes and ones in movies - this is what we are going to learn here.  </p>  <p>  \t                 Don&#039;t worry if you never liked math at school, if you can figure out how to buy stuff at the grocery shop, I assure you that you are going to understand the ideas presented here.  </p>  <p>  \t                 We will mainly discuss the following subjects:  </p>  <ul>  \t<li>Adding and subtracting numbers in the binary representation.</li>  \t<li>Converting between decimal (The &quot;normal&quot;) numbers, and binary numbers.</li>  \t<li>Dealing with negative binary numbers.</li>  </ul>  <p>  \t                 At this part of the course we will not yet see any actual assembly code. We have to learn this first, so please be patient :) . All of the exercises for this part are mostly theoretic. You have to sit down with a pen and paper and think a bit. (But really just a bit). It is very important that you do the exercises, or at least be sure that you know how to answer everything before you move on to the next part.  </p>  <p>  \t <strong>Why learn x86 Assembly Language?  </strong>  </p>  <ul>  \t<li>You are the kind of person who really likes to know how things work.    In this course you are going to get solid understanding on how   computer  programs work from the inside.</li>  \t<li>Become a better programmer - Knowing how things work down there will    help you take better decisions, even as a high level programmer. If   you  were always wondering what is the stack, or what are those pointers    everyone talks about, you came to the right place.</li>  \t<li>Write faster code - When you really want to get the most of your    processor, writing in raw Assembly is needed. We are not going to talk    about optimizations in this course, however you will get a solid    foundations so that you can continue exploring on your own.</li>  \t<li>You want to become a reverse engineer or a security researcher, read    the code of viruses or look for software vulnerabilities. As most of    the time the original source code will not be available to you, solid    understanding of x86 Assembly Language is mandatory.</li>  </ul>  <p>  \t <strong>Course structure</strong>  </p>  <p>  \t       The course is made of video lectures. A lecture could be from a presentation, or a real world example, showing me doing stuff at the computer.  </p>  <p>  \t       Almost every video lecture is accompanied by some kind of exercise (You will be told during the lecture, don&#039;t worry :) ) The exercises are open source. They are attached here as a rar file, however you could also get them on github. (See &quot;About this course&quot; video for more information).  </p>  <p>  \t       It is crucial that you complete the exercises. You will learn a lot from the lectures, but it is pretty much a waste of your time and money if you don&#039;t do the exercises. (Or at least verify that you know how to do them, if you are more experienced).<br>  \t <strong></strong>  </p>  <p>  \t <strong>Course tech stack</strong>  </p>  <p>  \t           No prior knowledge is assumed for this course, but I do assume  some things regarding your system, so make sure that everything here  describes you:  </p>  <ul>  \t<li>You are using a Windows operation system. (The course videos use Windows 7). It is recommended to use at least Windows XP.</li>  \t<li>You have an intel x86 processor. (If you don&#039;t know what you have then you have x86 processor, trust me).</li>  </ul>  <p>  \t           For the tech savvy, some more details about the tools we are going to use in this course:  </p>  <ul>  \t<li>Assembly flavour: x86 32 bits protected mode.</li>  \t<li>Assembler: The Flat Assembler (FASM)</li>  \t<li>Debugger: WinDbg.</li>  </ul>  <p>  \t         Using <strong>Linux</strong>? Most of the exercises were ported to linux, however the videos show me using windows 7. Contact me if you are not sure.  </p>", 
    "end_date": null, 
    "title": "Assembly Language Adventures (1): Counting with two digits", 
    "price": 0, 
    "instructors": "xor pd", 
    "commitment": "2.5 hours", 
    "cover_url": "https://udemy-images.udemy.com/course/750x422/316466_fc46_3.jpg", 
    "course_url": "https://www.udemy.com/x86-adventures-part-1/", 
    "subject_name": [
        "Programming Languages"
    ], 
    "duration": null, 
    "language_name": [
        "English"
    ], 
    "provider_name": [
        "udemy"
    ], 
    "start_date": "2014-10-09T09:33:15Z"
}