{
    "selfpaced": true, 
    "topic_name": [
        "Development"
    ], 
    "description": "<ul><li>Prerequisites: Basic understanding of Java</li><li>Taught by a Stanford-educated, ex-Googler, husband-wife team</li><li>Please <strong>don't</strong> take this class if you have already signed up for our <strong><em>From 0 to 1: Learn Java Programming</em> course</strong> (that includes a far longer and more in-depth version of this material)</li></ul><p><em><strong>This is a quick and handy course with exactly what you need to know (nothing more, nothing less!) about Object-Oriented programming in Java</strong></em></p><p>Let’s parse that.</p><ul><li>The course is <strong>quick and handy</strong>: It explains object-oriented programming in Java in just the right level of detail for you to put these to work today.</li><li>The course has <strong>exactly what you need</strong> - nothing more, nothing less. It starts from zero, builds up the design, then gives plenty of real-world examples, but crisply and quickly.</li><li>The course is also <strong>quirky</strong>. The examples are irreverent. Lots of little touches: repetition, zooming out so we remember the big picture, active learning with plenty of quizzes. There’s also a peppy soundtrack, and art - all shown by studies to improve cognition and recall.</li></ul><p><strong>What's covered:</strong></p><ul><li>The Object-Oriented Paradigm: Classes, Objects, Interfaces, Inheritance; how an OO mindset differs from a functional or imperative programming mindset; </li><li>Mechanics: the mechanics of OO - access modifiers, dynamic dispatch, abstract base classes v interfaces. </li><li>Principles: The underlying principles of OO: encapsulation, abstraction, polymorphism</li><li>Interfaces, abstract base classes and interface default methods </li><li>Packages and Jars: The plumbing is important to understand too.</li><li>Language Features: Serialisation; why the Cloneable interface sucks; exception handling; the immutability of Strings; </li><li>Types: the Object base class; the instanceof operator, primitive and object reference types; pass-by-value and pass-by-object-reference.</li></ul>", 
    "end_date": null, 
    "title": "Byte Size Chunks: Java Object-Oriented Programming & Design", 
    "price": "20.00", 
    "instructors": "Loony Corn", 
    "commitment": "7 hours", 
    "cover_url": "https://udemy-images.udemy.com/course/750x422/669522_23eb_3.jpg", 
    "course_url": "https://www.udemy.com/bsc-object-oriented/", 
    "currency": "USD", 
    "subject_name": [
        "Programming Languages"
    ], 
    "duration": null, 
    "language_name": [
        "English"
    ], 
    "provider_name": [
        "udemy"
    ], 
    "start_date": "2015-11-14T10:46:11Z"
}