{
    "selfpaced": true, 
    "topic_name": [
        "Development"
    ], 
    "description": "<p>We can add anything onto our standard databases and then search up queries like listing them in a particular chronological order or for instance, showing people who has a name starting with the letter a. But have you ever thought about how we save a particular location, more precisely, their latitude and longitude information by using queries? What about listing these queries from the nearest to the most far, most far to the nearest and everything else like searching up within a particular kilometer? </p><p>If the subject is location, we also need to learn how to use other data types as well as customary databases like pointfield or polygonfield. </p><strong>What is a PointField?</strong><p>Simply put, it is a type of data that we use to save the coordinates (latitude and longitude) of the users. </p><p><strong>What is a PolygonField?</strong></p><p>This is the type of data that you would need to use if you want to plot a particular area instead of just plotting a point on the map. Examples include: land, patch of an area, country, city, the area of a house etc.</p><p><strong>Where can I use PointField? Where would it benefit me? </strong></p><p>For example, when you check-in using the swarm app, the app will receive your latitude and logitude information where you have checked in at that moment. This information will be sent to their server and will be saved into the pointfield after being transformed into a point. Then your location will be shared with everyone instantly. </p><p><strong>What else does Swarm do? </strong></p><p>For example, when you are checking in, it comes up with some suggestions. For example, if you are eating in London in Burger King, and you have a Starbucks nearby, it will be suggested to you.</p><p>Here is an example of what the suggestions may look like:</p><ol><li>Burger King</li><li>Starbucks</li><li>London</li><li>Others...</li></ol><p>... but how does swarm know that you are near these places? </p><p>Because these are actually saved into the database of Swarm as a pointfield. So it's listing these localities from the closest to the most far. <em>After you have learnt from these lectures, you will find it's really easy make such filters. </em>\n</p><p>Additionally, you will also learn how to add limitations within a chosen quantity of kilometer . So you could request to show people for instance only within 10km in distance and list those from the nearest to the farthest.\n</p><p><strong>Let's talk a bit about Tinder. </strong></p><p>What does Tinder do? It shows you the nearest opposite sex. If you are not interested in the users nearby, it will show you someone else that is farther and the distance will gradually become higher. For example, if you are not interested in the people within 0.3km away, the distance will gradually increase to like 2km, 5km, 10km but for example if you are using Tinder in Turkey, you obviously won't see people who are in Germany.\n</p><p>Basically, Tinder saves your location into their pointfield and lists people who are the nearest  to the farthest to your location. \n</p><p>Tinder also shows your distance to other users. \n</p><p><em>With these lectures, you will also learn these and how to calculate the distance in between two users using km's or miles</em><em>. </em></p><p>Congratulations, you can now create apps such as swarm, tinder or foursquare. \n</p><p><strong>So what else can we do? </strong></p><p>Find my friends: you can make an app where you can find all your friends over a map.\n</p><p>You can create a special app where people can follow their girlfriends over a map.\n</p><p>You can create an app for rent a car type of businesses to follow the location of the vehicle.\n</p><p>For example, you can create an app for an employer who has a business that is usually done outside by an employee like working as a taxi driver. Usually, you would need an expensive GPS device for such things but you can simply make them download an app for their mobile phone and constantly watch their current location.\n</p><p>Not only these.\n</p><p>If you have a website about selling property (real estate) and instead of writing just the km2 of the house, you can show the location of the property on the map including its area giving more details. Who wouldn't want that? \n</p><p><em>Not only all of these, after these lectures, you will also learn about all the basics of Google Maps.</em></p><p><em>You will be able to show the people you have previously saved over google maps too.</em></p><p><em>You will gain knowledge about map markers. </em></p><em>You will gain knowledge about complex map markers. </em><p><em>You will see the photos which you have taken from the database as a marker and be able to add links to them.</em></p><p><strong>I have learnt everything about Geodjango, learnt about the types of data, I understand Google Maps too, yes, but you talk a lot about the latitude and logitude information. Where can I find that information? </strong></p><p>This is a very smart question. If you want to do this on web, don't worry, I also talk about the usage of the html 5 geolocation feature. \n</p><p>If you have a mobile app (objective-c for iOS and java for android) it is extremely easy to receive the latitude and longitude information. What you do with mobile applications is the same as posting the latitude and longtitude information to the server.\n</p><p><strong>Wow, the amount of information in the lectures are unbelievable! I think that's all we learn. </strong></p><p>No. Lastly, let's talk about GEOIP. Basically, GEOIP works by receiving the IP adress to receive information such as the country, county, city, district, adress. A<em>nd yes, with these lectures, you would be able to learn how to use the GEOIP library.</em></p><p><em></em><em>More info on geodjango . tumblr address.</em></p>", 
    "end_date": null, 
    "title": "Learn Geographic Information Systems with geodjango", 
    "price": "20.00", 
    "instructors": "Yasin Aktimur", 
    "commitment": "3 hours", 
    "cover_url": "https://udemy-images.udemy.com/course/750x422/305714_e8f2_3.jpg", 
    "course_url": "https://www.udemy.com/geodjango-tutorials-by-using-postgresql-postgis-proj4-geos/", 
    "currency": "USD", 
    "subject_name": [
        "Programming Languages"
    ], 
    "duration": null, 
    "language_name": [
        "English"
    ], 
    "provider_name": [
        "udemy"
    ], 
    "start_date": "2014-09-22T22:40:55Z"
}