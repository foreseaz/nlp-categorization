{"selfpaced": true, "topic_name": ["Web Development"], "description": "\n\n                    \n                    \n                    Learn how to handle asynchronous work with ease! In this course, you'll use Native JavaScript Promises to write asynchronous code that is easy to read, easy to write and easy to debug.\n\nAlong the way, you'll be using Promises to make a webapp come to life!Why Take This Course?Every web developer needs to be able to work with asynchronous code. Network requests, browser events, web workers and just about every else about the web happens asynchronously.\n\nJavaScript developers normally rely on callbacks to execute async code, but Native JavaScript Promises offer a much easier solution. With Promises, error handling is streamlined and it becomes possible to flexibly chain lots of asynchronous work without creating a tangled mess of callbacks.\n\n                                            Syllabus\n                        ### Lesson 1 - Creating Promises\n* Why Promises?\n* Promises syntax and scope\n* Simplifying common, useful methods with Promises\n* Basic error handling\n\n### Lesson 2 - Chaining Promises\n* Creating sequences of async work manually\n* Advanced error handling\n* Techniques for generating sequences of async work with array methods\n\n### Project\nThroughout the course (mostly in the second lesson), you'll be using Promises to load data into the Exoplanet Explorer app, which was designed to help people learn a little bit about planets around other stars.\n                                    ", "end_date": "2016-02-17T00:00:00Z", "title": "JavaScript Promises", "price": 0, "instructors": "Cameron Pittman", "institution_name": ["Google"], "commitment": "6 hours", "subject_name": ["Programming"], "course_url": "https://www.udacity.com/course/javascript-promises--ud898?utm_medium=referral&utm_campaign=api", "duration": "3 weeks", "language_name": ["English"], "provider_name": ["Udacity"], "start_date": "2016-01-27T00:00:00Z"}