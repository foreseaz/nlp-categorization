{"selfpaced": false, "topic_name": ["Web Development"], "description": "\n\n                    \n                    \n                    This is the first course in a Coursera Specialization track involving Web Application Architectures.  This course will give you the basic background, terminology and fundamental concepts that you need to understand in order to build modern full stack web applications. A full stack web developer is familiar with each \"layer\"  of the software technologies involved in a web application, including data modeling and database technologies, the web server environment and middleware components, network protocols, the user interface and basic visual design and user interaction concepts. \n\nIn this course we will learn by doing.  We will start by learning the major components of web application architectures, along with the fundamental design patterns and philosophies that are used to organize them.  You will build and continually refine a fully functional full-stack web application as we progress through the modules in this course.  Along the way you will be exposed to agile software development practices, numerous tools that software engineers are expected to know how to use, and a modern web application development framework.\n\nThis course is also available in Spanish. To join the Spanish version, visit this page: https://www.coursera.org/learn/apliweb.\n\n                                            Syllabus\n                        WelcomeModule #1 - Web Applications in ContextThis module sets the context for what we will study in this specialization by first providing a historical perspective on computing and web applications.  Next we provide an overview of how the Internet works, and then we discuss how web applications have evolved over the past few decades. After that we\u2019ll discuss some of the elements of modern software practice, including the typical tools that software engineers now use and the agile development practices they follow. The notion of software design patterns will introduced, and the n-tier architecture design pattern, fundamental to modern web application design, is then presented. Will also discuss a few current topics related to web application development. Finally, we will show you how to set up the software development environment you will use throughout the remainder of the courses in this. Module #2 - Web Applications FrameworksIn this module you will learn about web application frameworks. We will start by talking about the evolution of software and programming languages, and then talk about software application frameworks.  The fundamental trade-off we will consider is programmer productivity versus program efficiency.  Next you will learn about web application frameworks, as well as the model-view-controller design pattern that is the backbone for many of these frameworks.  We will also consider how these frameworks support the agile programming principles associated with modern software practice. This will include a discussion of distributed version control systems and you will learn how to use the popular Git system.  We will also demonstrate how to use Git with a Ruby on Rails application.  We will use Git to submit all of the programming applications in this specialization. Module #3 - Managing DataA successful web application provides information t\no users that is (1) useful, and also (2) \neasy to access and understand.  This information is\n often collected from users, as well as \nfrom other information sources, and must be stored \nin a manner that allows it to be \nmanipulated by the web application. The typical app\nroach is to store this data in a \nrelational database.  In this module you will learn\n some basic concepts associated with \nmodeling the data in a web application, including h\now to specify the relationships between \nvarious data entities.  We will also investigate ho\nw to hook a web application up to a back-\nend data store, along with good design techniques t\nhat will make it easier to use the data in \nyour web applications by maintaining consistency th\nroughout the entire web stack.  Module #4 - MiddlewareAn abstraction layer that hides details about hardware devices and other sof\ntware from an \napplication.  Middleware services implement device-specific functions, so that app\nlication \nframeworks do not need to concern themselves with \n...\nSupports database access \n\u2013\n ODBC, JDBC. Module #5 - The User InterfaceIn our final module we will discuss the User Interface. We will touch on CSS and JavaScript, and how these are used to add style to layout and design of HTML documents. We will also learn about Ajax and how it improves user requests.  \n                                    ", "end_date": "2016-07-11T00:00:00Z", "title": "Web Application Development: Basic Concepts", "price": 0, "instructors": "Greg Heileman and Manel Mart\u00ednez-Ram\u00f3n", "institution_name": ["University of New Mexico"], "commitment": "", "subject_name": ["Programming"], "course_url": "https://www.coursera.org/learn/web-app", "duration": "5 weeks", "language_name": ["English"], "provider_name": ["Coursera"], "start_date": "2016-06-06T00:00:00Z"}