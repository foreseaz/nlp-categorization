{"selfpaced": false, "topic_name": ["Theoretical Computer Science"], "description": "\n\n                    \n                    \n                    La logique servait surtout la philosophie et la th\u00e9ologie jusqu'au 19\u00e8me si\u00e8cle. Elle est apparue de mani\u00e8re brutale et cruciale au tournant du 20\u00e8me si\u00e8cle en math\u00e9matiques, avec les paradoxes et la question des fondements. Apr\u00e8s le th\u00e9or\u00e8me de G\u00f6del et la faillite du programme de Hilbert, la logique math\u00e9matique est devenue une partie sp\u00e9cialis\u00e9e des math\u00e9matiques pures. Mais l'\u00e2ge d'or de la logique arrive ensuite avec le d\u00e9veloppement de l'informatique.\r\nL'utilisation des ordinateurs a forc\u00e9 \u00e0 formaliser compl\u00e8tement les probl\u00e8mes \u00e0 r\u00e9soudre; la logique joue un r\u00f4le central dans les probl\u00e8mes de sp\u00e9cification et de v\u00e9rification des programmes. Du fait d'un lien surprenant entre les preuves et les programmes, la logique est aussi la base de la compr\u00e9hension des calculs. Plus concr\u00e8tement, la logique a \u00e9t\u00e9 \u00e0 l'origine d'avanc\u00e9es technologiques comme les langages de requ\u00eates dans les bases de donn\u00e9es. Beaucoup d'autres liens fondamentaux peuvent \u00eatre \u00e9voqu\u00e9s: avec les circuits, avec la complexit\u00e9, avec les jeux, avec la linguistique, etc. La logique est omnipr\u00e9sente en informatique.\r\nLe cours pr\u00e9sentera les bases de la logique informatique: cette premi\u00e8re partie traitera de calcul propositionnel; une seconde partie, \u00e0 venir, abordera la logique du premier ordre. Un perroquet menteur et des probl\u00e8mes de pavage nous permettrons d'introduire plusieurs interpr\u00e9tations des formules, et plusieurs syst\u00e8mes de preuve formelle... et le entscheindungsproblem!\n\n                                            Syllabus\n                        Semaine 1: calcul propositionnel classique\r\nintroduction du courssyntaxes\u00e9mantiquesatifaisabilit\u00e9Entscheidungsproblem\r\nSemaine 2: compacit\u00e9 et forme clausale\r\nth\u00e9or\u00e8me de compacit\u00e9forme clausale\r\nSemaine 3: r\u00e9solution\r\nun syst\u00e8me de preuve: la r\u00e9solutioncorrectioncompl\u00e9tude r\u00e9futationnellecompl\u00e9tude\r\nSemaine 4: logique intuitionniste\r\ns\u00e9mantique: structures de Kripkeun syst\u00e8me de preuve: le calcul des s\u00e9quents LJ\r\nSemaine 5: correction et compl\u00e9tude de LJ\r\ncorrectioncompl\u00e9tude\r\nSemaine 6: perspectives\r\ncalcul des s\u00e9quents classiquecorrespondance preuve-programmeconclusion: quelques autres d\u00e9veloppements possibles\n                                    ", "end_date": "2015-12-21T00:00:00Z", "title": "Introduction \u00e0 la logique informatique - Partie 1 : calcul propositionnel", "price": 0, "instructors": "Hubert Comon", "institution_name": ["Universit\u00e9 Paris-Saclay"], "commitment": "2 hours", "subject_name": ["Computer Science"], "course_url": "https://www.france-universite-numerique-mooc.fr/courses/ENSCachan/20004S02/session02/about", "duration": "6 weeks", "language_name": ["Others"], "provider_name": ["France Universit\u00e9 Numerique"], "start_date": "2015-11-09T00:00:00Z"}