{
    "selfpaced": true, 
    "topic_name": [
        "Web Development"
    ], 
    "description": "\n\n                    \n                    \n                    Performance matters to users. Web developers need to build apps that react quickly and render smoothly.\n\nGoogle performance guru Paul Lewis is here to help you destroy jank and create web apps that maintain 60 frames per second performance.\n\nYou'll leave this course with the tools you need to profile apps and identify the causes of jank. You'll explore the browser's rendering pipeline and uncover patterns that make it easy to build performant apps.Why Take This Course?Demystifying the browser's rendering pipeline will make it easy for you to build high performance web apps. By following a few simple principles, you'll be capable of drastically reducing the browser's workload and time needed to render each frame.\n\nYou'll start by getting introduce to the individual steps of the rendering pipeline, beginning with parsing HTML and ending with painting pixels on the screen. Then you'll quickly dive into tooling with ample opportunities to practice profiling and debugging apps with Chrome Developer Tools.\n\nThe final project uses the Hacker News API and gives you an opportunity to show off everything you've learned as you turn an awful experience into a high performance web app!\n\n                                            Syllabus\n                        ###Project\n\n*The News Aggregator App* - Turn an unusable app into a high performance, 60 frame per second experience. You'll be given a news aggregator app that uses the Hacker News API to display the day's top stories. The news aggregator has *lots* of performance issues. You'll demonstrate your understanding of performance by destroying all the jank and creating an experience that users will love.\n\n###Lesson 1 - The Critical Rendering Path\n\n* You'll play Jank Invaders to develop your eye for jank!\n* You'll learn how the browser turns HTML into pixels on the page\n* You'll learn how different CSS styles affect the rendering pipeline differently.\n\n###Lesson 2 - App Lifecycles\n\n* You'll learn how there are four distinct phases in an app's lifecycle: Response, Animation, Idle and Load (RAIL).\n* You'll learn how your frame budget changes depending on where the user is in RAIL.\n* You'll practice thinking through app workloads at different stages in RAIL.\n\n###Lesson 3 - Weapons of Jank Destruction\n\n* You'll learn how to make sense of the Timeline panel in Chrome DevTools.\n* You'll practice profiling a few different apps to find the source of jank.\n\n###Lesson 4 - JavaScript\n\n* You'll optimize JavaScript to hit 60fps during animations.\n* You'll move expensive JavaScript operations off the main thread and into Web Workers.\n* You'll debug a janky copy of a production quality app - the QR Snapper.\n\n###Lesson 5 - Styles and Layout\n\n* You'll learn how accessing the wrong CSS properties at inopportune moments can create loads of extra work for the browser.\n* You'll debug multiple instances of one of the nastiest performance problems - Forced Synchronous Layout.\n\n###Lesson 6 - Compositing and Painting\n\n* You'll practice profiling layer and paint performance with the paint profiler tool in the DevTools Timeline.\n* You'll manage and optimize layers to reduce the number of steps the browser needs to take to render each frame.\n* You'll demonstrate everything you've learned about performance as you de-jankify the News Aggregator App!\n                                    ", 
    "end_date": "2015-05-28T00:00:00Z", 
    "title": "Browser Rendering Optimization", 
    "price": 0, 
    "instructors": "Cameron Pittman and Paul Lewis", 
    "institution_name": [
        "Google"
    ], 
    "commitment": "6 hours", 
    "subject_name": [
        "Programming"
    ], 
    "course_url": "https://www.udacity.com/course/browser-rendering-optimization--ud860?utm_medium=referral&utm_campaign=api", 
    "duration": "4 weeks", 
    "language_name": [
        "English"
    ], 
    "provider_name": [
        "Udacity"
    ], 
    "start_date": "2015-04-30T00:00:00Z"
}