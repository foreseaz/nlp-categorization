{
    "selfpaced": true, 
    "topic_name": [
        "Web Development"
    ], 
    "description": "\n\n                                            Class Central Course Rank  \n                                                    \n                                #2 in Subjects\n                                                                    &gt; Programming\n                                                                                                    &gt; Web Development\n                                                            \n                            \n                                                \n                    \n                    \n                    Have you been dabbling with JavaScript but find your files keep turning into a mess of spaghetti code? Do you find yourself copying and pasting lines of code over and over throughout your application? Surely there’s a better way, right? \n\nYes, there is a better way -- object-oriented programming will allow you to build websites using reusable blocks of code known as libraries, similar to using bricks to build a house. This course is designed to teach web developers how to utilize the various object-oriented programming features within JavaScript, and more importantly, how to write reusable and maintainable libraries that will make your life easier.Why Take This Course?As a Front-End Web Developer, JavaScript is one of the most important languages in your toolbox. A strong foundation in the language’s features empowers you to write efficient and performant web applications. In this course you’ll explore a variety of ways to write object-oriented code in JavaScript.\n\nYou’ll build a variety of JavaScript objects and explore how their different inheritance models affect your code’s execution and in-memory model. You’ll use these features to write memory efficient code and seek simplicity and modularity in your own code.\n\n                                            Syllabus\n                        ### Lesson 1: Scopes and Closures\nWe’ll start by discussing JavaScript’s functional variable scoping features, including lexical scopes (variable availability as you write your code) and dynamics scopes (variable availability as your code actively runs). We’ll then discuss closures, an often misunderstood but incredibly useful feature available in only a handful of languages, including JavaScript.\n\n### Lesson 2: The Keyword “this”\nYou’ll start your dive into JavaScript object-oriented features by first discovering the parameter “this”. You’ll learn how the value of “this” is determined within various code structures and why it might be a lot easier to think of “this” as a parameter rather than a keyword.\n\n### Lesson 3: Prototype Delegation\nYou’re probably using one of JavaScript’s inheritance models already: prototype delegation! In this lesson you’ll learn more about this unique feature of JavaScript, how JavaScript uses this feature internally and how you can take advantage of it to maximize your application’s memory footprint.\n\n### Lesson 4: Code Reuse\nThere are numerous ways to write concise, maintainable and reusable code in JavaScript and you’ll practice a number of them in this lesson. We’ll start writing a library using basic functions and learn the decorator pattern. Then, we’ll refactor this library into the functional, prototypal and pseudoclassical inheritance models. Finally, we’ll explore sub-classing -- coding objects that directly inherit from objects we’ve previously defined.\n                                    ", 
    "end_date": "2014-10-30T00:00:00Z", 
    "title": "Object-Oriented JavaScript", 
    "price": 0, 
    "instructors": "Marcus Phillips", 
    "institution_name": [
        "Hack Reactor"
    ], 
    "commitment": "6 hours", 
    "subject_name": [
        "Programming"
    ], 
    "course_url": "https://www.udacity.com/course/object-oriented-javascript--ud015?utm_medium=referral&utm_campaign=api", 
    "duration": "5 weeks", 
    "language_name": [
        "English"
    ], 
    "provider_name": [
        "Udacity"
    ], 
    "start_date": "2014-09-25T00:00:00Z"
}