{
    "selfpaced": true, 
    "topic_name": [
        "Mobile Development"
    ], 
    "description": "\n\n                    \n                    \n                    In this project, we're going to build a weather app together and broaden our understanding of Swift and Cocoa Touch frameworks. We will start by learning foundational concepts like networking and concurrency while building on our existing knowledge of data modeling, Auto Layout and more. We’ll even take a look at how we can structure our code better and construct decoupled classes and structs that lead to greater code reuse. By the end of this project you will have built your second iOS app and be well on your way to becoming an iOS developer.\r\n \r\nWhat you'll learn\r\n\r\nNetworking\r\nConcurrency\r\nJSON\r\nNSURLSession\r\n\n\n                                            Syllabus\n                        Simple Data Structures\r\nIn the first stage of this course, we’re going to start by using external weather data loaded as a property list. We’ll learn about what property lists are, their advantages and disadvantages and how to use them in our app. We’ll also create a custom model to utilize the data from the plist in our app. Finally, we’ll display information in our view and learn about how we can make our UI conform to different devices using iOS 8’s new feature - Size Classes.\r\nInteracting with Data From the Web \r\nEven though we use the Web in lots of ways in our daily lives, communicating with the Web and interacting with the information we get is not a trivial task. In this stage we first take a look at some basic networking concepts like making HTTP requests. Then we learn about the notion of concurrency - a property of our system that lets us execute blocks of code simultaneously. This allows us to write networking code that doesn’t keep the user waiting.\r\nManaging Complexity\r\nOur network code works, but our app is somewhat muddied in terms of structure. We could do a better job of making our code more reusable and in this stage we’re going to take what we’ve done so far and split into different classes/structures. This way each object has clear responsibilities.\r\nAdding Weather Icons\r\nNow that we have most of the work done, let’s improve the user interface by adding icons to display the different kinds of weather. We’ll go over how we can use an enumeration to handle Icons rather than dumping it in the CurrentWeather struct.\r\nRefreshing the Data\r\nWe have a fully functional weather app that allows our users to check the weather of a specific location whenever they want! Unfortunately, with our current implementation, they cannot refresh the weather to get new information while the app is still open. Let’s add a refresh button and method to allow our users to do this.\r\n \r\n \r\n \n                                    ", 
    "end_date": null, 
    "title": "Build a Weather App with Swift", 
    "price": 25.0, 
    "instructors": "", 
    "institution_name": [], 
    "commitment": "3-4 hours", 
    "subject_name": [
        "Programming"
    ], 
    "course_url": "http://treehouse.7eer.net/c/259799/228915/3944?u=http%3A%2F%2Ftreehouse.7eer.net%2Fc%2F259799%2F228915%2F3944", 
    "duration": null, 
    "language_name": [
        "English"
    ], 
    "provider_name": [
        "Treehouse"
    ], 
    "start_date": "2016-06-07T00:00:00Z"
}