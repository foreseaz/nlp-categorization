{
    "selfpaced": true, 
    "topic_name": [
        "Theoretical Computer Science"
    ], 
    "description": "\n\n                    \n                    \n                    This class teaches you about basic concepts in theoretical computer science -- such as NP-completeness -- and what they imply for solving tough algorithmic problems.Why Take This Course?At the end of this course, you will have a solid understanding of theoretical computer science. This will not only allow you to recognize some of the most challenging algorithmic problems out there, but also give you powerful tools to deal with them in practice.\n\n                                            Syllabus\n                        ### Lesson 1: Challenging Problems\n\nAn introduction to tough problems and their analysis\n\n### Lesson 2: Understanding Hardness\n\nWhat we mean when a problem is “hard” and the concept of NP-completeness\n\n### Lesson 3: Showing Hardness\n\nTools to let you recognize and prove that a problem is hard\n\n### Lesson 4: Intelligent Force\n\nSmart techniques to solve problems that should – theoretically – be impossible to solve\n\n### Lesson 5: Sloppy Solutions\n\nGaining speed by accepting approximate solutions\n\n### Lesson 6: Poking Around\n\nWhy randomness can be of help – sometimes. An introduction to complexity classes.\n\n### Lesson 7: Ultimate Limits\n\nProblems that no computer can ever solve. In theory.\n                                    ", 
    "end_date": "2012-11-26T00:00:00Z", 
    "title": "Intro to Theoretical Computer Science", 
    "price": 0, 
    "instructors": "Sebastian Wernicke", 
    "institution_name": [], 
    "commitment": "6 hours", 
    "subject_name": [
        "Computer Science"
    ], 
    "course_url": "https://www.udacity.com/course/intro-to-theoretical-computer-science--cs313?utm_medium=referral&utm_campaign=api", 
    "duration": "8 weeks", 
    "language_name": [
        "English"
    ], 
    "provider_name": [
        "Udacity"
    ], 
    "start_date": "2012-10-01T00:00:00Z"
}