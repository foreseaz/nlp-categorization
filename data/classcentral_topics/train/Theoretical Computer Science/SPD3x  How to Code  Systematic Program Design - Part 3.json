{
    "selfpaced": false, 
    "topic_name": [
        "Theoretical Computer Science"
    ], 
    "description": "\n\n                    \n                    \n                    In part 3 of the How to Code – Systematic Program Design series, you will design programs that even experienced developers would find challenging. The design method you have been learning since How To Code - Systematic Program Design Part 1 will really deliver here, because you will be able to crank out these programs with relative ease.\n\nBy learning how to capture common data and control structures using abstraction, your programs will get shorter and better tested.\n\nIn this part of the course we will learn how to design search programs. You will design a program to solve Sudoku puzzles, and will be able to design many other puzzle solvers as well.\n\nThis course is part of the How to Code - Systematic Program Design XSeries Program: \n\nHow to Code: Systematic Program Design - Part 1\n\tHow to Code: Systematic Program Design - Part 2\n\n\n                                    ", 
    "end_date": "2017-03-21T00:00:00Z", 
    "title": "SPD3x: How to Code: Systematic Program Design - Part 3", 
    "price": 0, 
    "instructors": "Gregor Kiczales", 
    "institution_name": [
        "The University of British Columbia"
    ], 
    "commitment": "8-12 hours", 
    "subject_name": [
        "Computer Science"
    ], 
    "course_url": "https://www.edx.org/course/how-code-systematic-program-design-part-ubcx-spd3x", 
    "duration": "53 weeks", 
    "language_name": [
        "English"
    ], 
    "provider_name": [
        "edX"
    ], 
    "start_date": "2016-03-15T00:00:00Z"
}